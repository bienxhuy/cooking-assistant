<div class="chat-box" id="chatBox">
    <div class="message user">
        <div class="message-content">{{{userMessage}}}</div>
    </div>
    <div class="message assistant">
        <div class="message-content">{{{assistantMessage}}}</div>
    </div>
</div>

<form id="chatForm">
    <div class="input-group mt-3">
        <input type="text" name="userInput" id="userInput" class="form-control" placeholder="Type your message...">
        <div class="input-group-append">
            <button class="btn btn-primary" type="submit">Send</button>
        </div>
    </div>
</form>

<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
<script>
    document.getElementById('chatForm').addEventListener('submit', async function (e) {
        e.preventDefault();

        const input = document.getElementById('userInput');
        const userText = input.value.trim();
        if (!userText) return;

        // Append user message to chat
        const chatBox = document.getElementById('chatBox');
        chatBox.insertAdjacentHTML('beforeend', `
            <div class="message user">
                <div class="message-content">${userText}</div>
            </div>
        `);

        input.value = '';
        input.disabled = true;

        try {
            const res = await fetch('/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: new URLSearchParams({ userInput: userText })
            });
            const data = await res.json();
            let assistantMessage = data.assistantMessage;
            assistantMessage = marked.parse(assistantMessage);

            chatBox.insertAdjacentHTML('beforeend', `
                <div class="message assistant">
                    <div class="message-content">${assistantMessage}</div>
                </div>
            `);

            chatBox.scrollTop = chatBox.scrollHeight;
        } catch (err) {
            console.error('Error:', err);
        }

        input.disabled = false;
        input.focus();
    });
</script>